\BOOKMARK [1][-]{section.1}{Introduction of the Research Field}{}% 1
\BOOKMARK [1][-]{section.2}{Basics}{}% 2
\BOOKMARK [2][-]{subsection.2.1}{LSM-Tree}{section.2}% 3
\BOOKMARK [2][-]{subsection.2.2}{Compaction in LSM KV Stores}{section.2}% 4
\BOOKMARK [2][-]{subsection.2.3}{Sharding and Tow-level Sharding}{section.2}% 5
\BOOKMARK [2][-]{subsection.2.4}{Skew in Distributed Databases}{section.2}% 6
\BOOKMARK [1][-]{section.3}{Previous and Related Work}{}% 7
\BOOKMARK [2][-]{subsection.3.1}{MongoDB's Solution of Reducing Skew}{section.3}% 8
\BOOKMARK [2][-]{subsection.3.2}{Compaction and performance degradation}{section.3}% 9
\BOOKMARK [3][-]{subsubsection.3.2.1}{Light-weight LSM-Tree}{subsection.3.2}% 10
\BOOKMARK [3][-]{subsubsection.3.2.2}{Reducing Involved Components in Compaction}{subsection.3.2}% 11
\BOOKMARK [3][-]{subsubsection.3.2.3}{Disk Side optimization}{subsection.3.2}% 12
\BOOKMARK [2][-]{subsection.3.3}{Summary}{section.3}% 13
\BOOKMARK [1][-]{section.4}{Design of Hailstrom: Disaggregate Compute and Storage}{}% 14
\BOOKMARK [2][-]{subsection.4.1}{Basic Architecture}{section.4}% 15
\BOOKMARK [2][-]{subsection.4.2}{Hailstorm Filesystem Interface}{section.4}% 16
\BOOKMARK [2][-]{subsection.4.3}{Storage Architecture Design}{section.4}% 17
\BOOKMARK [2][-]{subsection.4.4}{Compaction Offloading}{section.4}% 18
\BOOKMARK [1][-]{section.5}{Evaluation}{}% 19
\BOOKMARK [2][-]{subsection.5.1}{Performance of Throughput}{section.5}% 20
\BOOKMARK [2][-]{subsection.5.2}{Resharding Costs}{section.5}% 21
\BOOKMARK [2][-]{subsection.5.3}{Using Hailstorm with B-trees}{section.5}% 22
\BOOKMARK [1][-]{section.6}{Discussion}{}% 23
\BOOKMARK [1][-]{section.7}{Conclusion}{}% 24
